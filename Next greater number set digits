Given a number n, find the smallest number that has same set of digits as n and is greater than n. If x is the greatest possible number with its set of digits, then print “not possible”.

Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is n,n is the number.

Output:

Print the greater number than n with same set of digits and if not possible then print "not possible" without double quote.

Constraints:

1 ≤ T ≤ 100
1 ≤ n ≤ 100000

Example:

Input
2
143
431

Output
314
not possible






import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	 public static void main(String args[]) throws IOException{
     BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
     int T=Integer.parseInt(br.readLine());
     for(int i =0 ;i< T ;i++){
        int in = Integer.parseInt(br.readLine());
        try{
        int out = GFG.nextHigherWithSameDigits(in);
        System.out.println(out);
        } catch (Exception e){
            System.out.println("not possible"); 
        }
    }
 }
 
 public static int nextHigherWithSameDigits(int number){
	char arr[] = String.valueOf(number).toCharArray();

		int count[] = new int[10];

		for(int i = arr.length - 1; i > 0; i--) {
			int digit = Integer.valueOf(String.valueOf(arr[i]));
			int nextDigit = Integer.valueOf(String.valueOf(arr[i-1]));
			count[digit]++;

			if(digit > nextDigit) {
				
				for(int j = nextDigit + 1; j < count.length; j++) {
					if(count[j] > 0) { // this is the digit to be replaced
						count[nextDigit]++;
						count[j]--;
						String numStr = String.valueOf(Arrays.copyOfRange(arr, 0, i-1)) + j; // from 0...i-2+j

						for(int k = 0; k < count.length; k++) { // drain lowest first
							while(count[k] > 0) {
								numStr = numStr + k;
								count[k]--;
							}
						}
						
						return Integer.valueOf(numStr);
						
						
					}
				}
			}

		}

		throw new IllegalArgumentException("Can not find a next greater number using " + number);
	}
}
